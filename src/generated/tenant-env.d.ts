/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'tenant';
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: {
    'AddGlobalIdentityRolesError': { kind: 'OBJECT'; name: 'AddGlobalIdentityRolesError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AddGlobalIdentityRolesErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AddGlobalIdentityRolesErrorCode': { name: 'AddGlobalIdentityRolesErrorCode'; enumValues: 'IDENTITY_NOT_FOUND' | 'INVALID_ROLE'; };
    'AddGlobalIdentityRolesResponse': { kind: 'OBJECT'; name: 'AddGlobalIdentityRolesResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'AddGlobalIdentityRolesError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'AddGlobalIdentityRolesResult'; ofType: null; } }; }; };
    'AddGlobalIdentityRolesResult': { kind: 'OBJECT'; name: 'AddGlobalIdentityRolesResult'; fields: { 'identity': { name: 'identity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Identity'; ofType: null; }; } }; }; };
    'AddIDPError': { kind: 'OBJECT'; name: 'AddIDPError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AddIDPErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AddIDPErrorCode': { name: 'AddIDPErrorCode'; enumValues: 'ALREADY_EXISTS' | 'UNKNOWN_TYPE' | 'INVALID_CONFIGURATION'; };
    'AddIDPResponse': { kind: 'OBJECT'; name: 'AddIDPResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'AddIDPError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AddMailTemplateError': { kind: 'OBJECT'; name: 'AddMailTemplateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AddMailTemplateErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AddMailTemplateErrorCode': { name: 'AddMailTemplateErrorCode'; enumValues: 'MISSING_VARIABLE' | 'PROJECT_NOT_FOUND'; };
    'AddMailTemplateResponse': { kind: 'OBJECT'; name: 'AddMailTemplateResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'AddMailTemplateError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddMailTemplateError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AddProjectMemberError': { kind: 'OBJECT'; name: 'AddProjectMemberError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AddProjectMemberErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'membershipValidation': { name: 'membershipValidation'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MembershipValidationError'; ofType: null; }; }; } }; }; };
    'AddProjectMemberErrorCode': { name: 'AddProjectMemberErrorCode'; enumValues: 'PROJECT_NOT_FOUND' | 'IDENTITY_NOT_FOUND' | 'ALREADY_MEMBER' | 'INVALID_MEMBERSHIP' | 'ROLE_NOT_FOUND' | 'VARIABLE_EMPTY' | 'VARIABLE_NOT_FOUND'; };
    'AddProjectMemberResponse': { kind: 'OBJECT'; name: 'AddProjectMemberResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'AddProjectMemberError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddProjectMemberError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ApiKey': { kind: 'OBJECT'; name: 'ApiKey'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'identity': { name: 'identity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Identity'; ofType: null; }; } }; }; };
    'ApiKeyWithToken': { kind: 'OBJECT'; name: 'ApiKeyWithToken'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'identity': { name: 'identity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Identity'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Boolean': unknown;
    'ChangeMyPasswordError': { kind: 'OBJECT'; name: 'ChangeMyPasswordError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ChangeMyPasswordErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ChangeMyPasswordErrorCode': { name: 'ChangeMyPasswordErrorCode'; enumValues: 'TOO_WEAK' | 'NOT_A_PERSON' | 'INVALID_PASSWORD' | 'NO_PASSWORD_SET'; };
    'ChangeMyPasswordResponse': { kind: 'OBJECT'; name: 'ChangeMyPasswordResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'ChangeMyPasswordError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ChangeMyProfileError': { kind: 'OBJECT'; name: 'ChangeMyProfileError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ChangeMyProfileErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ChangeMyProfileErrorCode': { name: 'ChangeMyProfileErrorCode'; enumValues: 'NOT_A_PERSON' | 'INVALID_EMAIL_FORMAT' | 'EMAIL_ALREADY_EXISTS'; };
    'ChangeMyProfileResponse': { kind: 'OBJECT'; name: 'ChangeMyProfileResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'ChangeMyProfileError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ChangePasswordError': { kind: 'OBJECT'; name: 'ChangePasswordError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ChangePasswordErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ChangePasswordErrorCode': { name: 'ChangePasswordErrorCode'; enumValues: 'PERSON_NOT_FOUND' | 'TOO_WEAK'; };
    'ChangePasswordResponse': { kind: 'OBJECT'; name: 'ChangePasswordResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'ChangePasswordError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChangePasswordError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CheckResetPasswordTokenCode': { name: 'CheckResetPasswordTokenCode'; enumValues: 'REQUEST_NOT_FOUND' | 'TOKEN_NOT_FOUND' | 'TOKEN_USED' | 'TOKEN_EXPIRED'; };
    'CheckResetPasswordTokenResult': { kind: 'OBJECT'; name: 'CheckResetPasswordTokenResult'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckResetPasswordTokenCode'; ofType: null; }; } }; }; };
    'CommonSignInResult': { kind: 'INTERFACE'; name: 'CommonSignInResult'; fields: { 'person': { name: 'person'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Person'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'CreateSessionTokenResult' | 'SignInIDPResult' | 'SignInResult'; };
    'ConfirmOtpError': { kind: 'OBJECT'; name: 'ConfirmOtpError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConfirmOtpErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ConfirmOtpErrorCode': { name: 'ConfirmOtpErrorCode'; enumValues: 'INVALID_OTP_TOKEN' | 'NOT_PREPARED'; };
    'ConfirmOtpResponse': { kind: 'OBJECT'; name: 'ConfirmOtpResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'ConfirmOtpError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ConfirmOtpError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CreateApiKeyError': { kind: 'OBJECT'; name: 'CreateApiKeyError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CreateApiKeyErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'membershipValidation': { name: 'membershipValidation'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MembershipValidationError'; ofType: null; }; }; } }; }; };
    'CreateApiKeyErrorCode': { name: 'CreateApiKeyErrorCode'; enumValues: 'PROJECT_NOT_FOUND' | 'INVALID_MEMBERSHIP' | 'VARIABLE_NOT_FOUND' | 'ROLE_NOT_FOUND' | 'VARIABLE_EMPTY'; };
    'CreateApiKeyResponse': { kind: 'OBJECT'; name: 'CreateApiKeyResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'CreateApiKeyError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CreateApiKeyError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'CreateApiKeyResult'; ofType: null; } }; }; };
    'CreateApiKeyResult': { kind: 'OBJECT'; name: 'CreateApiKeyResult'; fields: { 'apiKey': { name: 'apiKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApiKeyWithToken'; ofType: null; }; } }; }; };
    'CreatePasswordResetRequestError': { kind: 'OBJECT'; name: 'CreatePasswordResetRequestError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CreatePasswordResetRequestErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CreatePasswordResetRequestErrorCode': { name: 'CreatePasswordResetRequestErrorCode'; enumValues: 'PERSON_NOT_FOUND'; };
    'CreatePasswordResetRequestResponse': { kind: 'OBJECT'; name: 'CreatePasswordResetRequestResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'CreatePasswordResetRequestError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CreatePasswordResetRequestError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CreateProjectOptions': { kind: 'INPUT_OBJECT'; name: 'CreateProjectOptions'; inputFields: [{ name: 'deployTokenHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'noDeployToken'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CreateProjectResponse': { kind: 'OBJECT'; name: 'CreateProjectResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'CreateProjectResponseError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'CreateProjectResult'; ofType: null; } }; }; };
    'CreateProjectResponseError': { kind: 'OBJECT'; name: 'CreateProjectResponseError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CreateProjectResponseErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CreateProjectResponseErrorCode': { name: 'CreateProjectResponseErrorCode'; enumValues: 'ALREADY_EXISTS' | 'INIT_ERROR'; };
    'CreateProjectResult': { kind: 'OBJECT'; name: 'CreateProjectResult'; fields: { 'deployerApiKey': { name: 'deployerApiKey'; type: { kind: 'OBJECT'; name: 'ApiKeyWithToken'; ofType: null; } }; }; };
    'CreateResetPasswordRequestOptions': { kind: 'INPUT_OBJECT'; name: 'CreateResetPasswordRequestOptions'; inputFields: [{ name: 'mailProject'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mailVariant'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CreateSessionTokenError': { kind: 'OBJECT'; name: 'CreateSessionTokenError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CreateSessionTokenErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CreateSessionTokenErrorCode': { name: 'CreateSessionTokenErrorCode'; enumValues: 'UNKNOWN_EMAIL' | 'UNKNOWN_PERSON_ID' | 'PERSON_DISABLED'; };
    'CreateSessionTokenResponse': { kind: 'OBJECT'; name: 'CreateSessionTokenResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'CreateSessionTokenError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'CreateSessionTokenResult'; ofType: null; } }; }; };
    'CreateSessionTokenResult': { kind: 'OBJECT'; name: 'CreateSessionTokenResult'; fields: { 'person': { name: 'person'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Person'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DateTime': unknown;
    'DisableApiKeyError': { kind: 'OBJECT'; name: 'DisableApiKeyError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisableApiKeyErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DisableApiKeyErrorCode': { name: 'DisableApiKeyErrorCode'; enumValues: 'KEY_NOT_FOUND'; };
    'DisableApiKeyResponse': { kind: 'OBJECT'; name: 'DisableApiKeyResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'DisableApiKeyError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DisableApiKeyError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DisableIDPError': { kind: 'OBJECT'; name: 'DisableIDPError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisableIDPErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DisableIDPErrorCode': { name: 'DisableIDPErrorCode'; enumValues: 'NOT_FOUND'; };
    'DisableIDPResponse': { kind: 'OBJECT'; name: 'DisableIDPResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'DisableIDPError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DisableOtpError': { kind: 'OBJECT'; name: 'DisableOtpError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisableOtpErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DisableOtpErrorCode': { name: 'DisableOtpErrorCode'; enumValues: 'OTP_NOT_ACTIVE'; };
    'DisableOtpResponse': { kind: 'OBJECT'; name: 'DisableOtpResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'DisableOtpError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DisableOtpError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DisablePersonError': { kind: 'OBJECT'; name: 'DisablePersonError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DisablePersonErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DisablePersonErrorCode': { name: 'DisablePersonErrorCode'; enumValues: 'PERSON_ALREADY_DISABLED' | 'PERSON_NOT_FOUND'; };
    'DisablePersonResponse': { kind: 'OBJECT'; name: 'DisablePersonResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'DisablePersonError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'EnableIDPError': { kind: 'OBJECT'; name: 'EnableIDPError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EnableIDPErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EnableIDPErrorCode': { name: 'EnableIDPErrorCode'; enumValues: 'NOT_FOUND'; };
    'EnableIDPResponse': { kind: 'OBJECT'; name: 'EnableIDPResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'EnableIDPError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'IDPOptions': { kind: 'INPUT_OBJECT'; name: 'IDPOptions'; inputFields: [{ name: 'autoSignUp'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'exclusive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'initReturnsConfig'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'IDPOptionsOutput': { kind: 'OBJECT'; name: 'IDPOptionsOutput'; fields: { 'autoSignUp': { name: 'autoSignUp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'exclusive': { name: 'exclusive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'initReturnsConfig': { name: 'initReturnsConfig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'IDPResponseInput': { kind: 'INPUT_OBJECT'; name: 'IDPResponseInput'; inputFields: [{ name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Identity': { kind: 'OBJECT'; name: 'Identity'; fields: { 'apiKey': { name: 'apiKey'; type: { kind: 'OBJECT'; name: 'ApiKey'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'OBJECT'; name: 'IdentityGlobalPermissions'; ofType: null; } }; 'person': { name: 'person'; type: { kind: 'OBJECT'; name: 'Person'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IdentityProjectRelation'; ofType: null; }; }; }; } }; 'roles': { name: 'roles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'IdentityGlobalPermissions': { kind: 'OBJECT'; name: 'IdentityGlobalPermissions'; fields: { 'canCreateProject': { name: 'canCreateProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canDeployEntrypoint': { name: 'canDeployEntrypoint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'IdentityProjectRelation': { kind: 'OBJECT'; name: 'IdentityProjectRelation'; fields: { 'memberships': { name: 'memberships'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Membership'; ofType: null; }; }; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; }; };
    'IdentityProvider': { kind: 'OBJECT'; name: 'IdentityProvider'; fields: { 'configuration': { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Json'; ofType: null; }; } }; 'disabledAt': { name: 'disabledAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'options': { name: 'options'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IDPOptionsOutput'; ofType: null; }; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InitSignInIDPError': { kind: 'OBJECT'; name: 'InitSignInIDPError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'InitSignInIDPErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'InitSignInIDPErrorCode': { name: 'InitSignInIDPErrorCode'; enumValues: 'PROVIDER_NOT_FOUND' | 'IDP_VALIDATION_FAILED'; };
    'InitSignInIDPResponse': { kind: 'OBJECT'; name: 'InitSignInIDPResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'InitSignInIDPError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InitSignInIDPError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'InitSignInIDPResult'; ofType: null; } }; }; };
    'InitSignInIDPResult': { kind: 'OBJECT'; name: 'InitSignInIDPResult'; fields: { 'authUrl': { name: 'authUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'idpConfiguration': { name: 'idpConfiguration'; type: { kind: 'SCALAR'; name: 'Json'; ofType: null; } }; 'sessionData': { name: 'sessionData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Json'; ofType: null; }; } }; }; };
    'Int': unknown;
    'InviteError': { kind: 'OBJECT'; name: 'InviteError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'InviteErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'membershipValidation': { name: 'membershipValidation'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MembershipValidationError'; ofType: null; }; }; } }; }; };
    'InviteErrorCode': { name: 'InviteErrorCode'; enumValues: 'PROJECT_NOT_FOUND' | 'ALREADY_MEMBER' | 'INVALID_MEMBERSHIP' | 'INVALID_EMAIL_FORMAT' | 'ROLE_NOT_FOUND' | 'VARIABLE_NOT_FOUND' | 'VARIABLE_EMPTY'; };
    'InviteMethod': { name: 'InviteMethod'; enumValues: 'CREATE_PASSWORD' | 'RESET_PASSWORD'; };
    'InviteOptions': { kind: 'INPUT_OBJECT'; name: 'InviteOptions'; inputFields: [{ name: 'method'; type: { kind: 'ENUM'; name: 'InviteMethod'; ofType: null; }; defaultValue: null }, { name: 'mailVariant'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'InviteResponse': { kind: 'OBJECT'; name: 'InviteResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'InviteError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InviteError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'InviteResult'; ofType: null; } }; }; };
    'InviteResult': { kind: 'OBJECT'; name: 'InviteResult'; fields: { 'isNew': { name: 'isNew'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'person': { name: 'person'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Person'; ofType: null; }; } }; }; };
    'Json': unknown;
    'MailTemplate': { kind: 'INPUT_OBJECT'; name: 'MailTemplate'; inputFields: [{ name: 'projectSlug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MailType'; ofType: null; }; }; defaultValue: null }, { name: 'variant'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'subject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'useLayout'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'MailTemplateIdentifier': { kind: 'INPUT_OBJECT'; name: 'MailTemplateIdentifier'; inputFields: [{ name: 'projectSlug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MailType'; ofType: null; }; }; defaultValue: null }, { name: 'variant'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MailType': { name: 'MailType'; enumValues: 'EXISTING_USER_INVITED' | 'NEW_USER_INVITED' | 'RESET_PASSWORD_REQUEST'; };
    'MemberType': { name: 'MemberType'; enumValues: 'API_KEY' | 'PERSON'; };
    'Membership': { kind: 'OBJECT'; name: 'Membership'; fields: { 'role': { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variables': { name: 'variables'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VariableEntry'; ofType: null; }; }; }; } }; }; };
    'MembershipInput': { kind: 'INPUT_OBJECT'; name: 'MembershipInput'; inputFields: [{ name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'variables'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VariableEntryInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'MembershipValidationError': { kind: 'OBJECT'; name: 'MembershipValidationError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MembershipValidationErrorCode'; ofType: null; }; } }; 'role': { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variable': { name: 'variable'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MembershipValidationErrorCode': { name: 'MembershipValidationErrorCode'; enumValues: 'ROLE_NOT_FOUND' | 'VARIABLE_NOT_FOUND' | 'VARIABLE_EMPTY' | 'VARIABLE_INVALID'; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'addGlobalIdentityRoles': { name: 'addGlobalIdentityRoles'; type: { kind: 'OBJECT'; name: 'AddGlobalIdentityRolesResponse'; ofType: null; } }; 'addIDP': { name: 'addIDP'; type: { kind: 'OBJECT'; name: 'AddIDPResponse'; ofType: null; } }; 'addMailTemplate': { name: 'addMailTemplate'; type: { kind: 'OBJECT'; name: 'AddMailTemplateResponse'; ofType: null; } }; 'addProjectMailTemplate': { name: 'addProjectMailTemplate'; type: { kind: 'OBJECT'; name: 'AddMailTemplateResponse'; ofType: null; } }; 'addProjectMember': { name: 'addProjectMember'; type: { kind: 'OBJECT'; name: 'AddProjectMemberResponse'; ofType: null; } }; 'changeMyPassword': { name: 'changeMyPassword'; type: { kind: 'OBJECT'; name: 'ChangeMyPasswordResponse'; ofType: null; } }; 'changeMyProfile': { name: 'changeMyProfile'; type: { kind: 'OBJECT'; name: 'ChangeMyProfileResponse'; ofType: null; } }; 'changePassword': { name: 'changePassword'; type: { kind: 'OBJECT'; name: 'ChangePasswordResponse'; ofType: null; } }; 'confirmOtp': { name: 'confirmOtp'; type: { kind: 'OBJECT'; name: 'ConfirmOtpResponse'; ofType: null; } }; 'createApiKey': { name: 'createApiKey'; type: { kind: 'OBJECT'; name: 'CreateApiKeyResponse'; ofType: null; } }; 'createGlobalApiKey': { name: 'createGlobalApiKey'; type: { kind: 'OBJECT'; name: 'CreateApiKeyResponse'; ofType: null; } }; 'createProject': { name: 'createProject'; type: { kind: 'OBJECT'; name: 'CreateProjectResponse'; ofType: null; } }; 'createResetPasswordRequest': { name: 'createResetPasswordRequest'; type: { kind: 'OBJECT'; name: 'CreatePasswordResetRequestResponse'; ofType: null; } }; 'createSessionToken': { name: 'createSessionToken'; type: { kind: 'OBJECT'; name: 'CreateSessionTokenResponse'; ofType: null; } }; 'disableApiKey': { name: 'disableApiKey'; type: { kind: 'OBJECT'; name: 'DisableApiKeyResponse'; ofType: null; } }; 'disableIDP': { name: 'disableIDP'; type: { kind: 'OBJECT'; name: 'DisableIDPResponse'; ofType: null; } }; 'disableOtp': { name: 'disableOtp'; type: { kind: 'OBJECT'; name: 'DisableOtpResponse'; ofType: null; } }; 'disablePerson': { name: 'disablePerson'; type: { kind: 'OBJECT'; name: 'DisablePersonResponse'; ofType: null; } }; 'enableIDP': { name: 'enableIDP'; type: { kind: 'OBJECT'; name: 'EnableIDPResponse'; ofType: null; } }; 'initSignInIDP': { name: 'initSignInIDP'; type: { kind: 'OBJECT'; name: 'InitSignInIDPResponse'; ofType: null; } }; 'invite': { name: 'invite'; type: { kind: 'OBJECT'; name: 'InviteResponse'; ofType: null; } }; 'prepareOtp': { name: 'prepareOtp'; type: { kind: 'OBJECT'; name: 'PrepareOtpResponse'; ofType: null; } }; 'removeGlobalIdentityRoles': { name: 'removeGlobalIdentityRoles'; type: { kind: 'OBJECT'; name: 'RemoveGlobalIdentityRolesResponse'; ofType: null; } }; 'removeMailTemplate': { name: 'removeMailTemplate'; type: { kind: 'OBJECT'; name: 'RemoveMailTemplateResponse'; ofType: null; } }; 'removeProjectMailTemplate': { name: 'removeProjectMailTemplate'; type: { kind: 'OBJECT'; name: 'RemoveMailTemplateResponse'; ofType: null; } }; 'removeProjectMember': { name: 'removeProjectMember'; type: { kind: 'OBJECT'; name: 'RemoveProjectMemberResponse'; ofType: null; } }; 'resetPassword': { name: 'resetPassword'; type: { kind: 'OBJECT'; name: 'ResetPasswordResponse'; ofType: null; } }; 'setProjectSecret': { name: 'setProjectSecret'; type: { kind: 'OBJECT'; name: 'SetProjectSecretResponse'; ofType: null; } }; 'signIn': { name: 'signIn'; type: { kind: 'OBJECT'; name: 'SignInResponse'; ofType: null; } }; 'signInIDP': { name: 'signInIDP'; type: { kind: 'OBJECT'; name: 'SignInIDPResponse'; ofType: null; } }; 'signOut': { name: 'signOut'; type: { kind: 'OBJECT'; name: 'SignOutResponse'; ofType: null; } }; 'signUp': { name: 'signUp'; type: { kind: 'OBJECT'; name: 'SignUpResponse'; ofType: null; } }; 'unmanagedInvite': { name: 'unmanagedInvite'; type: { kind: 'OBJECT'; name: 'InviteResponse'; ofType: null; } }; 'updateIDP': { name: 'updateIDP'; type: { kind: 'OBJECT'; name: 'UpdateIDPResponse'; ofType: null; } }; 'updateProject': { name: 'updateProject'; type: { kind: 'OBJECT'; name: 'UpdateProjectResponse'; ofType: null; } }; 'updateProjectMember': { name: 'updateProjectMember'; type: { kind: 'OBJECT'; name: 'UpdateProjectMemberResponse'; ofType: null; } }; }; };
    'Person': { kind: 'OBJECT'; name: 'Person'; fields: { 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'identity': { name: 'identity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Identity'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'otpEnabled': { name: 'otpEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PrepareOtpResponse': { kind: 'OBJECT'; name: 'PrepareOtpResponse'; fields: { 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'PrepareOtpResult'; ofType: null; } }; }; };
    'PrepareOtpResult': { kind: 'OBJECT'; name: 'PrepareOtpResult'; fields: { 'otpSecret': { name: 'otpSecret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'otpUri': { name: 'otpUri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Project': { kind: 'OBJECT'; name: 'Project'; fields: { 'config': { name: 'config'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Json'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'members': { name: 'members'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectIdentityRelation'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'roles': { name: 'roles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RoleDefinition'; ofType: null; }; }; }; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProjectIdentityRelation': { kind: 'OBJECT'; name: 'ProjectIdentityRelation'; fields: { 'identity': { name: 'identity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Identity'; ofType: null; }; } }; 'memberships': { name: 'memberships'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Membership'; ofType: null; }; }; }; } }; }; };
    'ProjectMembersFilter': { kind: 'INPUT_OBJECT'; name: 'ProjectMembersFilter'; inputFields: [{ name: 'memberType'; type: { kind: 'ENUM'; name: 'MemberType'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'identityId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'personId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProjectMembersInput': { kind: 'INPUT_OBJECT'; name: 'ProjectMembersInput'; inputFields: [{ name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'offset'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'ProjectMembersFilter'; ofType: null; }; defaultValue: null }]; };
    'ProjectSecret': { kind: 'INPUT_OBJECT'; name: 'ProjectSecret'; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'checkResetPasswordToken': { name: 'checkResetPasswordToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckResetPasswordTokenCode'; ofType: null; }; } }; 'identityProviders': { name: 'identityProviders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IdentityProvider'; ofType: null; }; }; }; } }; 'me': { name: 'me'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Identity'; ofType: null; }; } }; 'personById': { name: 'personById'; type: { kind: 'OBJECT'; name: 'Person'; ofType: null; } }; 'projectBySlug': { name: 'projectBySlug'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Membership'; ofType: null; }; }; }; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; }; }; } }; }; };
    'RemoveGlobalIdentityRolesError': { kind: 'OBJECT'; name: 'RemoveGlobalIdentityRolesError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RemoveGlobalIdentityRolesErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RemoveGlobalIdentityRolesErrorCode': { name: 'RemoveGlobalIdentityRolesErrorCode'; enumValues: 'IDENTITY_NOT_FOUND' | 'INVALID_ROLE'; };
    'RemoveGlobalIdentityRolesResponse': { kind: 'OBJECT'; name: 'RemoveGlobalIdentityRolesResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'RemoveGlobalIdentityRolesError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'RemoveGlobalIdentityRolesResult'; ofType: null; } }; }; };
    'RemoveGlobalIdentityRolesResult': { kind: 'OBJECT'; name: 'RemoveGlobalIdentityRolesResult'; fields: { 'identity': { name: 'identity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Identity'; ofType: null; }; } }; }; };
    'RemoveMailTemplateError': { kind: 'OBJECT'; name: 'RemoveMailTemplateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RemoveMailTemplateErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RemoveMailTemplateErrorCode': { name: 'RemoveMailTemplateErrorCode'; enumValues: 'PROJECT_NOT_FOUND' | 'TEMPLATE_NOT_FOUND'; };
    'RemoveMailTemplateResponse': { kind: 'OBJECT'; name: 'RemoveMailTemplateResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'RemoveMailTemplateError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RemoveMailTemplateError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'RemoveProjectMemberError': { kind: 'OBJECT'; name: 'RemoveProjectMemberError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RemoveProjectMemberErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RemoveProjectMemberErrorCode': { name: 'RemoveProjectMemberErrorCode'; enumValues: 'NOT_MEMBER' | 'PROJECT_NOT_FOUND'; };
    'RemoveProjectMemberResponse': { kind: 'OBJECT'; name: 'RemoveProjectMemberResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'RemoveProjectMemberError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RemoveProjectMemberError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ResetPasswordError': { kind: 'OBJECT'; name: 'ResetPasswordError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ResetPasswordErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ResetPasswordErrorCode': { name: 'ResetPasswordErrorCode'; enumValues: 'TOKEN_NOT_FOUND' | 'TOKEN_USED' | 'TOKEN_EXPIRED' | 'PASSWORD_TOO_WEAK'; };
    'ResetPasswordResponse': { kind: 'OBJECT'; name: 'ResetPasswordResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'ResetPasswordError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ResetPasswordError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'RoleConditionVariableDefinition': { kind: 'OBJECT'; name: 'RoleConditionVariableDefinition'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RoleDefinition': { kind: 'OBJECT'; name: 'RoleDefinition'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variables': { name: 'variables'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'RoleVariableDefinition'; ofType: null; }; }; }; } }; }; };
    'RoleEntityVariableDefinition': { kind: 'OBJECT'; name: 'RoleEntityVariableDefinition'; fields: { 'entityName': { name: 'entityName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RolePredefinedVariableDefinition': { kind: 'OBJECT'; name: 'RolePredefinedVariableDefinition'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RoleVariableDefinition': { kind: 'INTERFACE'; name: 'RoleVariableDefinition'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'RoleConditionVariableDefinition' | 'RoleEntityVariableDefinition' | 'RolePredefinedVariableDefinition'; };
    'SetProjectSecretError': { kind: 'OBJECT'; name: 'SetProjectSecretError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SetProjectSecretErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SetProjectSecretErrorCode': { name: 'SetProjectSecretErrorCode'; enumValues: 'PROJECT_NOT_FOUND'; };
    'SetProjectSecretResponse': { kind: 'OBJECT'; name: 'SetProjectSecretResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'SetProjectSecretError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'SignInError': { kind: 'OBJECT'; name: 'SignInError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SignInErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SignInErrorCode': { name: 'SignInErrorCode'; enumValues: 'UNKNOWN_EMAIL' | 'INVALID_PASSWORD' | 'PERSON_DISABLED' | 'NO_PASSWORD_SET' | 'OTP_REQUIRED' | 'INVALID_OTP_TOKEN'; };
    'SignInIDPError': { kind: 'OBJECT'; name: 'SignInIDPError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SignInIDPErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SignInIDPErrorCode': { name: 'SignInIDPErrorCode'; enumValues: 'INVALID_IDP_RESPONSE' | 'IDP_VALIDATION_FAILED' | 'PERSON_NOT_FOUND' | 'PERSON_DISABLED' | 'PERSON_ALREADY_EXISTS'; };
    'SignInIDPResponse': { kind: 'OBJECT'; name: 'SignInIDPResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'SignInIDPError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SignInIDPError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'SignInIDPResult'; ofType: null; } }; }; };
    'SignInIDPResult': { kind: 'OBJECT'; name: 'SignInIDPResult'; fields: { 'person': { name: 'person'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Person'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SignInResponse': { kind: 'OBJECT'; name: 'SignInResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'SignInError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SignInError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'SignInResult'; ofType: null; } }; }; };
    'SignInResult': { kind: 'OBJECT'; name: 'SignInResult'; fields: { 'person': { name: 'person'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Person'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SignOutError': { kind: 'OBJECT'; name: 'SignOutError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SignOutErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SignOutErrorCode': { name: 'SignOutErrorCode'; enumValues: 'NOT_A_PERSON' | 'NOT_POSSIBLE_SIGN_OUT_WITH_PERMANENT_API_KEY'; };
    'SignOutResponse': { kind: 'OBJECT'; name: 'SignOutResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'SignOutError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SignOutError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'SignUpError': { kind: 'OBJECT'; name: 'SignUpError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SignUpErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endPersonMessage': { name: 'endPersonMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SignUpErrorCode': { name: 'SignUpErrorCode'; enumValues: 'EMAIL_ALREADY_EXISTS' | 'INVALID_EMAIL_FORMAT' | 'TOO_WEAK'; };
    'SignUpResponse': { kind: 'OBJECT'; name: 'SignUpResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'SignUpError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SignUpError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'SignUpResult'; ofType: null; } }; }; };
    'SignUpResult': { kind: 'OBJECT'; name: 'SignUpResult'; fields: { 'person': { name: 'person'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Person'; ofType: null; }; } }; }; };
    'String': unknown;
    'UnmanagedInviteOptions': { kind: 'INPUT_OBJECT'; name: 'UnmanagedInviteOptions'; inputFields: [{ name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'resetTokenHash'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateIDPError': { kind: 'OBJECT'; name: 'UpdateIDPError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UpdateIDPErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UpdateIDPErrorCode': { name: 'UpdateIDPErrorCode'; enumValues: 'NOT_FOUND' | 'INVALID_CONFIGURATION'; };
    'UpdateIDPResponse': { kind: 'OBJECT'; name: 'UpdateIDPResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'UpdateIDPError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'UpdateProjectError': { kind: 'OBJECT'; name: 'UpdateProjectError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UpdateProjectErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UpdateProjectErrorCode': { name: 'UpdateProjectErrorCode'; enumValues: 'PROJECT_NOT_FOUND'; };
    'UpdateProjectMemberError': { kind: 'OBJECT'; name: 'UpdateProjectMemberError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UpdateProjectMemberErrorCode'; ofType: null; }; } }; 'developerMessage': { name: 'developerMessage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endUserMessage': { name: 'endUserMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'membershipValidation': { name: 'membershipValidation'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MembershipValidationError'; ofType: null; }; }; } }; }; };
    'UpdateProjectMemberErrorCode': { name: 'UpdateProjectMemberErrorCode'; enumValues: 'PROJECT_NOT_FOUND' | 'NOT_MEMBER' | 'INVALID_MEMBERSHIP' | 'ROLE_NOT_FOUND' | 'VARIABLE_EMPTY' | 'VARIABLE_NOT_FOUND'; };
    'UpdateProjectMemberResponse': { kind: 'OBJECT'; name: 'UpdateProjectMemberResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'UpdateProjectMemberError'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UpdateProjectMemberError'; ofType: null; }; }; }; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'UpdateProjectResponse': { kind: 'OBJECT'; name: 'UpdateProjectResponse'; fields: { 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'UpdateProjectError'; ofType: null; } }; 'ok': { name: 'ok'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'VariableEntry': { kind: 'OBJECT'; name: 'VariableEntry'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'values': { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'VariableEntryInput': { kind: 'INPUT_OBJECT'; name: 'VariableEntryInput'; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
  };
};

import * as gqlTada from 'gql.tada';
